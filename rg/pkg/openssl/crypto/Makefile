RGSRC=../../../
include $(RGSRC)/envir.mak
#
# SSLeay/crypto/Makefile
#
include $(RGSRC)/pkg/openssl/crypto/crypto_env.mak

COMMON_SUBDIRS=md5 sha des md4 md2
CRYPTO_LIB_SUBDIRS+=stack err bio lhash buffer rand bn ripemd rsa dsa dso dh \
  objects evp asn1 pem x509 x509v3 conf txt_db pkcs7 pkcs12 comp \
  rc4 hmac rc2

# all directories are entered just to export their headers
ARCHCONFIG_SUBDIRS=$(COMMON_SUBDIRS) $(CRYPTO_LIB_SUBDIRS)

SUBDIRS=$(COMMON_SUBDIRS)

ifdef CONFIG_RG_CRYPTO
  A_TARGET=$(CRYPTO_LIB)
  SUBDIRS+=$(CRYPTO_LIB_SUBDIRS)
  O_OBJS_$(CRYPTO_LIB)=cryptlib.o mem.o mem_dbg.o cversion.o ex_data.o \
	  tmdiff.o cpt_err.o ebcdic.o uid.o
    ifdef CONFIG_DYN_LINK
      CRYPTO_SO_LIB=$(CRYPTO_LIB:%.a=%.so)
      SO_TARGET=$(CRYPTO_SO_LIB)
      L_OBJS_$(CRYPTO_SO_LIB)=$(CRYPTO_LIB)
      SO_CFLAGS_$(CRYPTO_SO_LIB)=-Wl,--whole-archive
    endif
else
  ifndef CONFIG_RG_GPL
    A_TARGET=$(CRYPTO_RG_LIB)
    O_OBJS_$(CRYPTO_RG_LIB)=crypto_stubs.o
    ifdef CONFIG_DYN_LINK
      CRYPTO_RG_SO_LIB=$(CRYPTO_RG_LIB:%.a=%.so)
      SO_TARGET=$(CRYPTO_RG_SO_LIB)
      L_OBJS_$(CRYPTO_RG_SO_LIB)=$(CRYPTO_RG_LIB)
      SO_CFLAGS_$(CRYPTO_RG_SO_LIB)=-Wl,--whole-archive
    endif
  endif
endif

CREATE_LOCAL=$(A_TARGET)

TOP=		..

$(call RGDEP,$(SO_TARGET),$(A_TARGET))

EXPORT_HEADERS= crypto.h tmdiff.h opensslv.h opensslconf.h ebcdic.h symhacks.h md32_common.h

EXPORT_LIBS=$(LOCAL_A_TARGET)
ifdef CONFIG_DYN_LINK
EXPORT_LIBS+=$(SO_TARGET)
else
EXPORT_LIBS+=$(A_TARGET)
endif

include $(RGMK)

archconfig:: buildinf.h

buildinf.h: $(TOP)/Makefile
	( echo "#ifndef MK1MF_BUILD"; \
	echo "  /* auto-generated by crypto/Makefile.ssl for crypto/cversion.c */"; \
	echo "  #define CFLAGS \"$(CC) $(CFLAG)\""; \
	echo "  #define PLATFORM \"$(PLATFORM)\""; \
	echo "  #define DATE \"`LC_ALL=C LC_TIME=C date`\""; \
	echo "#endif" ) >buildinf.h

tests:
	@for i in $(SUBDIRS) ;\
	do \
	(cd $$i; echo "making tests in crypto/$$i..."; \
	$(MAKE) tests ); \
	done;

include $(SSLMK)

